import java.util.Queue;
import java.util.LinkedList;

class Solution {
    public int solution(int bridge_length, int weight, int[] truck_weights) {
       
        int answer = 0; // 경과 시간
        
        Queue<Integer> bridge = new LinkedList<Integer>(); // 다리를 지나는 트럭
        int currentWeight = 0; // 다리 위 트럭 무게의 합
        
        // i는 truck_weights의 인덱스 (i+1번째 트럭)
        for (int i = 0; i < truck_weights.length; i++){
        
            while(true){

                // 다리에 아무것도 없는 상태
                if (bridge.size() == 0) {
                    
                    bridge.add(truck_weights[i]);
                    currentWeight += truck_weights[i];
                    answer++;
                    break;
                    
                } 
                
                if (bridge.size() == bridge_length){
                    
                    currentWeight -= bridge.peek();
                    bridge.poll();
                    
                } else if (currentWeight + truck_weights[i] <= weight){
                    // 다음 트럭까지 합한 무게 <= 다리가 견딜 수 있는 무게 -> add

                    bridge.add(truck_weights[i]); // i+1번째 트럭
                    currentWeight += truck_weights[i]; // + 트럭 무게
                    answer++; // 시간 증가
                    break;
                 
                } else { // 트럭 올라갈 수 없음
                        
                    bridge.add(0);
                    answer++;
 
                }
                
            }
                
        }
            
        return answer + bridge_length; // 경과 시간 + 트럭이 지나올 시간 더해줌
    }
}
