'''
개수 1~8: 백트래킹! --> 재귀함수

재귀함수
- 현재 횟수가 최대면 갱신

- for (던전 개수)
    -  if 현재 피로도 >= 필요 피로도 and 방문 x:
            방문 o
            recall(피로도-소모, cnt+1, 피로도 배열)
            함수에서 돌아왔으니 방문 x

'''

answer = 0
length = 0
visited = []

def dfs(k, cnt, dungeons):
    # 피로도, 방문 횟수, 피로도 배열
    
    global answer
    
    # 최대 방문 횟수 확인
    if cnt > answer:
        answer = cnt
    
    # 방문 시작점 설정
        #DFS로 탐색 끝나고, 다른 시작점으로 탐색 시작
    for i in range(length):
        # 필요 피로도 ok, 아직 방문 안 한 경우
        if k >= dungeons[i][0] and not visited[i]:
            visited[i] = True                       # 방문 처리
            dfs(k-dungeons[i][1], cnt+1, dungeons)  # 다음 탐색 시작 (피로도 -, 횟수 +, 배열)
            visited[i] = False                      # 방문했다 돌아오면 초기화 False
    


def solution(k, dungeons):
    global answer, length, visited
    length = len(dungeons)
    visited = [False] * length
    
    dfs(k, 0, dungeons)
    
    return answer
