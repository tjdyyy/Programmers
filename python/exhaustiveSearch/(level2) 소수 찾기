perm = set()
visited = []      
        
def prime(n):
    
    if n <= 1:
        return False 
    
    for i in range(2, int(n**0.5)+1):
        if n % i == 0: # 나눠 떨어지면
            return False

    return True

# 숫자 조합 찾기 
def dfs(idx, numbers, pieces):
    global visited, perm
    
    # 길이 최대
    if idx == len(numbers): return
    
    for i in range(len(numbers)):
        if not visited[i]:
            pieces += numbers[i]
            visited[i] = True
            perm.add(int(pieces))
            dfs(idx+1, numbers, pieces)
            pieces = pieces[:-1]
            visited[i] = False
            

def solution(numbers):
    global perm
    
    global visited
    for _ in range(len(numbers)): visited.append(False)
    
    dfs(0, numbers, "")
                   
    # print(perm)
    answer = [i for i in perm if prime(i)]
    # print(answer)
    return len(answer)
